version: "3.8"

services:
  # Spring Boot application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SERVER_PORT: 8081
      SPRING_R2DBC_URL: r2dbc:postgresql://db:5433/postgres
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: changemeinprod!
      SPRING_FLYWAY_URL: jdbc:postgresql://db:5433/postgres
      SPRING_FLYWAY_USER: postgres
      SPRING_FLYWAY_PASSWORD: changemeinprod!
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - db
    restart: always
    networks:
      - app-network
      - kafka-network

  # PostgreSQL database
  db:
    image: postgres:latest
    ports:
      - "5433:5433"
    command: -p 5433
    environment:
      POSTGRES_PASSWORD: changemeinprod!
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres_data1:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge
  kafka-network:
    external: true
    name: kafka-network

volumes:
  postgres_data1:
#Before running docker compose, build your application with:
#  ./gradlew bootJar
#Then you can start everything with:
#  docker compose up --build
